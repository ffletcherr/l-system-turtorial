from random import uniform as uni
from random import randint as rint

t1_fprob = 0.3
t1_len = 10
t1_generation = 0
t1_bw = 0.6
t1_fisize1, t1_fisize2 = 0.2, 0.4
t1_fosize1, t1_fosize2 = 0.1, 0.2
t1_lisize1, t1_lisize2 = 0.1,0.9
t1_losize1, t1_losize2 = 0.25, 0.75

t2_len = 20
t2_leaflen = 1.5
t2_leafsize = 0.03
t2_bdlen1, t2_bdlen2 = 0.5, 1.5
t2_bcount1, t2_bcount2 = 6,12
t2_basesize = 0.04

Axiom: [tree1()]MoveTo(10,10,0)[tree2()]MoveTo(-10,-10,0)[tree3()]

derivation length: 125
production:



###### Tree 3 ######

tree3():
  produce SetWidth(0.8)F(3,0.55)F(1,0.4)t3_A(15)

t3_A(t):
  nproduce F(uni(0.5,2))[randrot(-180,180,65,85)t3_B(rint(t,t+4))]
  if t > 0 :
    produce t3_A(t-1)
  else:
    produce t3_C(3)


t3_B(t):
  nproduce SetWidth(0.2)curve(5,5)F(uni(0.1,1))
  if uni(0,1) < 0.3:
    nproduce t3_C(2)
  if t > 0 :
    produce t3_B(t-1)
  else:
    produce t3_C(2)
    
t3_C(w):
  if w > 0:
    for _ in range(5):
      nproduce [;randrot(-180,180,-100,2)F(uni(0.5,2),0.08)[F(uni(1,3),0.03)F(uni(1,3))]]t3_C(w-1)


###### Tree 2 ######

tree2():
  produce SetColor(80, 70, 55)SetWidth((t2_len-3)*t2_basesize)FFt2_A(t2_len)


t2_A(w):
  nproduce -(uni(-2,2))F(1,(w-w/4)*t2_basesize)[SetWidth(0.05)t2_B(w)]
  if w > 0:
    produce t2_A(w-1)
  else:
    produce Ft2_C(10)
    
t2_B(w):
  num = rint(t2_bcount1, t2_bcount2)
  for degree in range(0, 360, 360//num):
    degree = degree + uni(-30,30)
    nproduce [F(uni(1,3)) /(degree)-(80 + uni(-10,10) )F(uni(t2_bdlen1, t2_bdlen2))t2_C(w+5)]
  if w < 2:
    for _ in range(3):
	    nproduce  [F(3) randrot(-180,180,-45,45)t2_C(6)] [F(3) randrot(-180,180,-45,45)t2_C(6)]

t2_C(w):
  for _ in range(w):
    nproduce [SetColor(22, 55, 9)SetWidth(0.03)[\(15)+(25)F(t2_leaflen,t2_leafsize)][/(75)+(25)F(t2_leaflen,t2_leafsize)]]/(uni(15,35))F(0.3)

###### Tree 1 ######

tree1():
  produce SetWidth(0.5) @Gc t1_A() t1_tree(1) @Ge

t1_A():
  nproduce (
  F(1,t1_bw)curve(15,15)
  F(1.5,t1_bw-0.1)curve(15,15)
  F(1,t1_bw-0.15)curve(15,15)
  F(1,t1_bw-0.2)curve(15,15)
  F(1,t1_bw-0.25)curve(15,15)
  F(2,t1_bw-0.32)curve(15,15)
  F(1,t1_bw-0.35)curve(15,15)
  )

t1_tree(t):
  nproduce (
	  curve(15,15)F(uni(0.3,1))
	  [ 
	  		[
		  		F(uni(0.01,0.2))-(90)t1_arm(t)] 
				F(uni(0.01,0.2))[+(90)t1_arm(t)]
				F(uni(0.01,0.2))[^(90)t1_arm(t)]
				F(uni(0.01,0.2))[&(90)t1_arm(t)]
		  ]
  )
  if t<t1_len:
    produce t1_tree(t+1)
  else:
    for _ in range(4):
        nproduce [t1_arm(4)]


t1_arm(t):
  nproduce [curve(25,25)branch(t)]branch(t)
  if t<t1_len:
    produce t1_arm(t+1)


branch(t):
  nproduce SetWidth(min(0.3/t,0.1))+(uni(-25,25)) &(uni(-25,25)) F 
  for _ in range(2):
    nproduce leaf(t1_lisize1,t1_lisize2,t1_losize1,t1_losize2) [fruit(t1_fisize1,t1_fisize2,t1_fosize1,t1_fosize2, t1_fprob)]


leaf(isize1, isize2, osize1, osize2):
  nproduce [[;randrot(-180,180,0,40)~l(uni(0.1,1))]F(uni(isize1, isize2))[;randrot(-180,180,0,40)~l(uni(osize1, osize2))]]

fruit(isize1, isize2, osize1, osize2, fprob):
  if uni(0,1) < fprob:
    nproduce SetWidth(0.01)ptDw()-(uni(-15,15))F(uni(isize1, isize2));;@O(uni(osize1, osize2))..
  else:
    produce


ptUp():
  produce PinpointRel(0,0,1)

ptDw():
  produce PinpointRel(0,0,-1)

curve(r,p):
  nproduce -(rint(-r,r))&(rint(-p,p))

randrot(r1,r2,t1,t2):
	produce  /(uni(r1,r2))+(uni(t1,t2))


interpretation:


endlsystem
